on: [release,workflow_dispatch]
jobs:
  build-and-upload:
    name: Build and Upload
    runs-on: ubuntu-latest

    strategy:
      matrix:
        downloadSource: [ GITHUB, SPIGOT, HANGAR, MODRINTH, CURSE_FORGE ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup JDK
        uses: actions/setup-java@v4.2.2
        with:
          distribution: 'adopt'
          java-version: '17'
          java-package: jdk
          architecture: x64
      - name: Set downloadSource in plugin.yml
        run: |
          sed -i "s/downloadSource:.*/downloadSource: '${{ matrix.downloadSource }}'/" src/main/resources/plugin.yml
          cat src/main/resources/plugin.yml
      - name: Build with Maven
        run: |
          mvn install
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          echo "git_hash=$git_hash" >> $GITHUB_ENV
          echo "artifactPath=$(pwd)/target" >> $GITHUB_ENV
      - name: Extract Maven project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: project
      - name: Upload Plugin jar to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Plugin-${{ env.snapshotVersion }}-${{ matrix.downloadSource }}.jar
          path: ${{ env.artifactPath }}/TDRPlaytime-${{ steps.project.outputs.version }}.jar
      - name: Download Minecraft server
        run: |
          curl -o server.jar https://cdn.thedutchservers.com/spigot/paper-1.21.1-3.jar
          echo "eula=true" > eula.txt
      - name: Copy plugin to server plugins folder
        run: |
          mkdir -p plugins
          cp ${{ env.artifactPath }}/TDRPlaytime-${{ steps.build-and-upload.outputs.version }}.jar plugins/
      - name: Start Minecraft server
        run: |
          java -Xmx1024M -Xms1024M -jar server.jar nogui &
          sleep 60
          if grep -q "Done" server.log; then
            echo "Server started successfully"
          else
            echo "Server failed to start"
            exit 1
          fi
      - name: Check plugin startup
        run: |
          if grep -q "TDRPlaytime" server.log; then
            echo "Plugin started successfully"
          else
            echo "Plugin failed to start"
            exit 1
          fi